flex-direction
	row		요소들을 row 로 정렬
	column		요소들을 column 으로 정렬
	row-reverse	row의 반대, 즉 오른쪽에서 왼쪽으로 정렬
	column-reverse	column의 반대, 즉 위에서 아래로 정렬

align-items: 
	center 		요소들을 컨테이너의 세로선 상의 가운데로 정렬
	flex-start		요소들을 컨테이너의 꼭대기로 정렬	
	flex-end		요소들을 컨테이너의 바닥으로 정렬
	baseline		요소들을 컨테이너의 시작위치에 정렬
	stretch		요소들을 컨테이너에 맞도록 늘림

justify-content
	flex-start		기본값. 요소들을 컨테이너의 왼쪽으로 정렬
	flex-end		요소들을 컨테이너의 오른쪽으로 정렬
	center		요소들을 컨테이너의 가운데로 정렬
	space-around	요소들 "주위"에 동일한 간격을 둠
	space-between	요소들 "사이에" 동일한 간격을 둠

-------------------------------------------------------------------------------------------------

<inline대표적인거 a라인: inline은 영역 크기 조정 불가능. 줄바꿈이 일어나지 않음 >
     정해진 영역에 따라서 크기에 정해서
<block= 크기 변경 가능>
<inline-block = 크기 변경 불가능>	

-CASE
camelCase  (가운데가 대문자)
kebab-case (-미들바로 연결. HTML에서 디폴트 값) 
snake_case (_언더바로 연결.  주로 파이썬에서 사용)


-------------------------------------------------------------------------------------------

 .link-test{
            border: 1px solid black;
            height: 1000px;
        }
        .h1-test{
            border : 1px solid black;
            height: 100px;
            width: 100px;
        }

boder 중복되게 사용할때는 그냥

.h1-test,
         .link-test {
            border: 10px solid blue;
        }

요런 식으로 압축 가능 

--------------------------------------------------------------------------------------------

display : none;  ------------------- 이거 하면 안보여

css에서 감춰져있을 뿐이지 태그에는 존재

----------------------------------------------------------------------------------------------------

div보다는 aside를 쓰는게 좋긴 함

div는 한 줄 차지함

 
-부적절한 표현- 
div {
            display : inline;

 span {
            display : block;

-----------------------------------------------------------------------------------------------------------

flex의 기본은 정렬하라고 만든거 

grid의 목적은 레이아웃 (싸피에서 안가르치긴 함)

Holy Grail(예수님의 포도주) Layout


부모(class)가 flex고 자식(item)이 정렬이 되어야함 


wrapper ,container, box

< 가로 세로 로우 컬럼 행렬  - I - I - I >


---------------------------------------------------------------------------------------------------------
row-reverse; 
reverse 붙으면 오른쪽부터 정렬 


column-reverse; 
reverse 붙으면 밑으로 정렬 

align-items: center; justify-content: center;
2개 같이 쓰면 정 가운데로 

justify-content: space-around;
간격으로 벌어짐 

justify-content: space-between;
간격으로 벌어짐 ( 맨 위랑 아래는 지면에 붙어있음)

justify-content: space-between;
            flex-wrap: wrap;
wrap은 뭔지 ㅁㄹ 	

.b{
            flex: 3;
            background-color: purple;

여기서 flex는 비율을 뜻합니다. 



<div class = "boxxx a"> </div>
        <div class = "boxxx b"> </div>
        <div class = "boxxx c"> </div>

 
------------------------------------------
<오후>

relative
분모를 기준(부모가 나에게 설정한 범위 내에서)으로 위치를 계산한다.


----------------------------------------------

옮길때는 position: relative;가 기본값

      position: relative;
      /* relative : 분모를 기준으로 상대적인 값 */
      left : 100px;
      /*왼쪽에 100만큼 여백을 준다 */
      /* position:static; */

------------------------------------------

static이 아닌 부모가 기준 

      position: absolute;
      top: 0px;
      background-color: black;


-----------------------------------------------

https://www.w3schools.com/ <--------- 예제 검색할 때 유용 

python -naver <------------ 이렇게 검색하면 naver 제외됩니다

-----------------------------------------------

.box3{
    background-color: green;
    top:80px;
    left:230px;
    z-index: 1 <----------------------------------- 포개지는 순서

----------------------------------------------------
</head>
<body>
  <div class="box1"></div>      <--------------------- z-index 안쓰려면 이런 식 	
  <div class="box2"></div>
  <div class="box3"></div>
</body>
</html>

------------------------------------------------------
<프리터>
alt + shit +f 

-------------------------------------------------------

초콜렛티 깔고
choco install git
한번 끄고 
폴더가서 code로 열기 



