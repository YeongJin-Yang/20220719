키와 값으로 이루어진 프로퍼티의 모음 

객체지향 ->

절차적으로 실행된다는 뜻은 아님

class 쓸때는 앞에는 new 붙이기 
()함수
[]배열

constructor 역할 : 매개변수 받는 것 

this 역할 : 클래스에서만 쓰이는 용어 (전역변수=필드를 의미함)

this.age(전역변수) = age(파라미터);  <------ 값을 전달 받는 것 

매서드 = class 안에 들어가는 것 

자바스크립트에서 함수 = 기능
나머지 언어의 함수 = "재사용가능한"기능 (이름이 있어야 호출가능)


return을 받아서 쓰는게 원칙이지 console.log로 하는건 부적절  

<추상화> 
class 만들기 == class는 추상화된 코드(자주사용하는거라서 필요할 때 사용)

인스턴스(객체와 비슷) = class로 만들어진 결과

ex) 메모장을 3번 킨다 == 메모장 실행 코드는 1개, 실행창(서로다른 특징을 가진)은 3개 

게임캐릭터가 비슷하다면?
Class Character () {}로 정의 가능 

--------------------------------------------------------

<상속>
상속을 안하고 클래스를 3번 제작 시??
-> 똑같은 작업을 3번 해야함

<다형성>
이름은 같지만 다르게 쓴다 .

함수 내용을 다르게 만들면 (오버라이딩)
함수 피라미터개수가 다르면 (오버 

<캡슐화> --- 자바스크립트에서는 비추.. 자바에서 배워라 
필드를 수정할 때 직접 수행하지 마라!!!! (함수로 가져와야함 <- 정보보호를 위해) 


-----------------------------------------------------------

<콜백함수>  --------------------------보이드 포인터??(내가 무엇을 받을지 모름)
함수의 파라미터로 들어가는 함수

왜 들어가냐?? == 함수를 저장해둘려고

함수에 ( )가 들어가면 함수를 실행한다는 의미

--------------------------------------------------------------

for 문은 원래있던 배열을 손실시킬 수 있음

array순회 매서드


---------------------------------------------------------
오후

<reduce>
초기값 유무에 따라 동작방식이 달라짐


---------------------------------------------------------
false

false, !true, 0, undefined, null, " ",

빈 배열[]과 빈 객체{}는 true이다!!!

서로 똑같아보이는 배열과 객체는 비교가 불가능!!!!!!!!!!!!!!!!  <----길이로 접근 (길이로 배열이 비어있는지 아닌지 유무판단)

ex) name:"jony"
if( a===[])

lodash??(객체와 배열 비교 연산) <---------- 파이썬에서 사용 



${} 쓰면 깔끔하게 가능 


-----------------------------------------------------------

프론트엔드 :  클라이언트 영역을 개발합니다.  HTTP(요청) 
백엔드 : 서버를 개발합니다.

---------------------------------------------------------------

비동기 ... asynchoronous (자바스크립트만) 늦을 것 같으면 다음을 먼저 실행시킴
동기....하나가 끝나야 다음으로 진행 (자바 스크립트를 제외한 언어) 앞구문이 끝나야 다음 구문 실행



--------------------------------------------------------------

멀티 프로세싱 : 
멀티 스레드 : 하나의 프로세스에서 여러가지 일 

자바스크립트는 멀티 스레드를 지원하지 않음.


----------------------------------------------------------------

<Ajax>
새로고침 하지 않고 수행
서버에 검색내용을 요청 -> 검색 내용 리스트를 제이슨을 받아옴 (제이슨은 데이터) -> 클라이언트에서 바꿈

------------------------------------------------------------------


결합자 
